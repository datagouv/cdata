{
  "name": "Complex Test Dataset",
  "description": "This is a comprehensive sample JSON file for testing the JSON preview functionality with nested structures, arrays, and various data types",
  "version": "2.0.0",
  "author": "Data.gouv.fr",
  "metadata": {
    "created_at": "2024-01-15T10:30:00Z",
    "last_updated": "2024-01-20T14:45:00Z",
    "tags": ["test", "sample", "json", "nested", "complex", "preview", "truncation"],
    "license": "MIT",
    "contributors": [
      {
        "name": "John Doe",
        "email": "john.doe@example.com",
        "role": "lead_developer",
        "department": {
          "name": "Engineering",
          "code": "ENG-001",
          "location": {
            "building": "Main Office",
            "floor": 3,
            "room": "301",
            "coordinates": {
              "latitude": 48.8566,
              "longitude": 2.3522
            }
          }
        }
      },
      {
        "name": "Jane Smith",
        "email": "jane.smith@example.com",
        "role": "data_scientist",
        "department": {
          "name": "Data Science",
          "code": "DS-002",
          "location": {
            "building": "Innovation Center",
            "floor": 2,
            "room": "205",
            "coordinates": {
              "latitude": 48.8566,
              "longitude": 2.3522
            }
          }
        }
      }
    ]
  },
  "data": {
    "records": [
      {
        "id": 1,
        "name": "Record 1",
        "value": 42,
        "active": true,
        "tags": ["test", "sample", "json", "first"],
        "nested_object": {
          "level1": {
            "level2": {
              "level3": {
                "deep_value": "This is a very deep nested value",
                "numbers": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                "strings": ["alpha", "beta", "gamma", "delta", "epsilon"],
                "mixed": [
                  {"type": "object", "value": 123},
                  {"type": "array", "value": [1, 2, 3]},
                  {"type": "string", "value": "nested string"}
                ]
              }
            }
          }
        },
        "array_of_objects": [
          {
            "sub_id": "1a",
            "sub_name": "Sub Object 1a",
            "properties": {
              "color": "red",
              "size": "large",
              "weight": 15.5
            }
          },
          {
            "sub_id": "1b",
            "sub_name": "Sub Object 1b",
            "properties": {
              "color": "blue",
              "size": "medium",
              "weight": 8.2
            }
          }
        ]
      },
      {
        "id": 2,
        "name": "Record 2",
        "value": 123,
        "active": false,
        "tags": ["test", "sample", "json", "second"],
        "nested_object": {
          "level1": {
            "level2": {
              "level3": {
                "deep_value": "Another deep nested value with more content",
                "numbers": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
                "strings": ["zeta", "eta", "theta", "iota", "kappa"],
                "mixed": [
                  {"type": "boolean", "value": true},
                  {"type": "null", "value": null},
                  {"type": "number", "value": 3.14159}
                ]
              }
            }
          }
        },
        "array_of_objects": [
          {
            "sub_id": "2a",
            "sub_name": "Sub Object 2a",
            "properties": {
              "color": "green",
              "size": "small",
              "weight": 3.1
            }
          },
          {
            "sub_id": "2b",
            "sub_name": "Sub Object 2b",
            "properties": {
              "color": "yellow",
              "size": "extra-large",
              "weight": 25.8
            }
          }
        ]
      },
      {
        "id": 3,
        "name": "Record 3",
        "value": 456,
        "active": true,
        "tags": ["test", "sample", "json", "third", "complex"],
        "nested_object": {
          "level1": {
            "level2": {
              "level3": {
                "level4": {
                  "level5": {
                    "deepest_value": "This is the deepest nested value possible",
                    "complex_array": [
                      {
                        "nested_array": [
                          {"key1": "value1", "key2": "value2"},
                          {"key3": "value3", "key4": "value4"}
                        ],
                        "nested_object": {
                          "inner_key1": "inner_value1",
                          "inner_key2": "inner_value2"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "array_of_objects": [
          {
            "sub_id": "3a",
            "sub_name": "Sub Object 3a",
            "properties": {
              "color": "purple",
              "size": "medium",
              "weight": 12.3,
              "additional_props": {
                "material": "plastic",
                "manufacturer": "TestCorp",
                "warranty": {
                  "duration": "2 years",
                  "coverage": "full",
                  "conditions": ["normal_use", "no_damage", "proper_maintenance"]
                }
              }
            }
          }
        ]
      }
    ],
    "statistics": {
      "total_records": 3,
      "active_records": 2,
      "inactive_records": 1,
      "average_value": 207,
      "value_distribution": {
        "min": 42,
        "max": 456,
        "median": 123,
        "quartiles": {
          "q1": 82.5,
          "q2": 123,
          "q3": 289.5
        }
      },
      "tag_frequency": {
        "test": 3,
        "sample": 3,
        "json": 3,
        "first": 1,
        "second": 1,
        "third": 1,
        "complex": 1
      }
    },
    "configuration": {
      "display_settings": {
        "theme": "light",
        "font_size": 12,
        "line_height": 1.4,
        "indent_width": 2,
        "max_depth": 5,
        "expand_by_default": true
      },
      "performance_settings": {
        "max_characters": 10000,
        "truncation_enabled": true,
        "lazy_loading": true,
        "virtual_scrolling": false
      },
      "export_settings": {
        "formats": ["json", "csv", "xml", "yaml"],
        "compression": true,
        "include_metadata": true
      }
    }
  },
  "relationships": {
    "parent_dataset": {
      "id": "parent-001",
      "name": "Parent Dataset",
      "relationship_type": "parent"
    },
    "child_datasets": [
      {
        "id": "child-001",
        "name": "Child Dataset 1",
        "relationship_type": "child",
        "dependencies": ["field1", "field2"]
      },
      {
        "id": "child-002",
        "name": "Child Dataset 2",
        "relationship_type": "child",
        "dependencies": ["field3", "field4"]
      }
    ],
    "related_datasets": [
      {
        "id": "related-001",
        "name": "Related Dataset 1",
        "relationship_type": "related",
        "similarity_score": 0.85
      },
      {
        "id": "related-002",
        "name": "Related Dataset 2",
        "relationship_type": "related",
        "similarity_score": 0.72
      }
    ]
  },
  "validation": {
    "schema_version": "1.0",
    "validation_rules": [
      {
        "field": "id",
        "type": "integer",
        "required": true,
        "min_value": 1
      },
      {
        "field": "name",
        "type": "string",
        "required": true,
        "max_length": 100
      },
      {
        "field": "value",
        "type": "number",
        "required": true,
        "min_value": 0
      },
      {
        "field": "active",
        "type": "boolean",
        "required": true
      },
      {
        "field": "tags",
        "type": "array",
        "required": false,
        "item_type": "string"
      }
    ],
    "validation_results": {
      "total_fields": 5,
      "valid_fields": 5,
      "invalid_fields": 0,
      "warnings": [],
      "errors": []
    }
  },
  "api_endpoints": {
    "base_url": "https://api.example.com/v1",
    "endpoints": [
      {
        "path": "/datasets/{id}",
        "method": "GET",
        "description": "Retrieve dataset by ID",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "description": "Dataset identifier"
          }
        ],
        "response_format": "json"
      },
      {
        "path": "/datasets/{id}/records",
        "method": "GET",
        "description": "Retrieve all records for a dataset",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "description": "Dataset identifier"
          },
          {
            "name": "limit",
            "type": "integer",
            "required": false,
            "default": 100,
            "description": "Maximum number of records to return"
          },
          {
            "name": "offset",
            "type": "integer",
            "required": false,
            "default": 0,
            "description": "Number of records to skip"
          }
        ],
        "response_format": "json"
      },
      {
        "path": "/datasets/{id}/records/{record_id}",
        "method": "GET",
        "description": "Retrieve a specific record",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "description": "Dataset identifier"
          },
          {
            "name": "record_id",
            "type": "integer",
            "required": true,
            "description": "Record identifier"
          }
        ],
        "response_format": "json"
      }
    ]
  }
} 