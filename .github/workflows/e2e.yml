name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  e2e-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cdata
        uses: actions/checkout@v4

      - name: Checkout udata
        uses: actions/checkout@v4
        with:
          repository: opendatateam/udata
          path: udata
          ref: master

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install Node.js dependencies for cdata
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox

      - name: Start udata with Docker Compose
        working-directory: udata
        run: |
          # Start MongoDB and Redis
          docker compose up -d db broker

          # Wait for services to be ready
          timeout 60 bash -c 'until docker compose exec -T db mongosh --eval "db.runCommand({ping: 1})" ; do sleep 2; done'
          timeout 30 bash -c 'until docker compose exec -T broker redis-cli ping ; do sleep 1; done'

          echo "Database services are ready"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies for udata
        working-directory: udata
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/develop.pip
          pip install -e .

      - name: Configure udata
        working-directory: udata
        run: |
          cat << 'EOF' > udata.cfg
          from udata.settings import Defaults

          DEBUG = True
          TESTING = True
          SECRET_KEY = 'test-secret-key-for-ci'
          SEND_MAIL = False
          SERVER_NAME = 'localhost:5000'
          CACHE_TYPE = 'flask_caching.backends.null'
          DEFAULT_LANGUAGE = 'fr'

          URLS_ALLOW_PRIVATE = True
          URLS_ALLOW_LOCAL = True
          URLS_ALLOWED_TLDS = Defaults.URLS_ALLOWED_TLDS | set(['local'])

          PLUGINS = []
          FS_ROOT = 'fs'

          SESSION_COOKIE_SECURE = False

          SECURITY_EMAIL_VALIDATOR_ARGS = {
              "check_deliverability": False
          }
          EOF

      - name: Initialize udata
        working-directory: udata
        run: |
          # Create fs directory
          mkdir -p fs

          # Initialize udata
          udata init

          udata licenses
          udata spatial load
          udata import-fixtures

          udata user create --first-name "Admin" --last-name "User" --email "admin@example.com" --password "@1337Password42" --admin

          # Start udata server in background
          inv serve --port=5000 &

          # Wait for udata to be ready
          timeout 90 bash -c 'until curl -f http://localhost:5000/api/1/site/; do sleep 2; done'
          echo "udata server is ready"

      - name: Build and start cdata
        env:
          NUXT_PUBLIC_API_BASE: http://localhost:5000/api/1/
          NUXT_PUBLIC_HOMEPAGE_HERO_IMAGES: "['hero_15.png']"
        run: |
          # Build cdata
          npm run build

          # Start cdata server in background
          PORT=3000 npm run preview &

          # Wait for cdata to be ready
          timeout 90 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
          echo "cdata server is ready"

      - name: Run E2E tests
        env:
          BASE_URL: http://localhost:3000
          CI: true
        run: npm run test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
